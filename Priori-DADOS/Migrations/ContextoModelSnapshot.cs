// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Priori_DADOS;

namespace Priori_DADOS.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Priori_OBJ.Models.Funcao", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Funcoes");

                    b.HasData(
                        new
                        {
                            Id = "ba4e20f5-cebe-43db-b59d-b4d4bec1eb5a",
                            ConcurrencyStamp = "7fb6714d-0e4e-4d32-a4ba-cdcaeaabe201",
                            Descricao = "Administrador do sistema",
                            Name = "Administrador",
                            NormalizedName = "ADMINISTRADOR"
                        },
                        new
                        {
                            Id = "9351018d-e148-46d9-aa2d-5f743024715c",
                            ConcurrencyStamp = "279ded7a-8c98-417a-afa3-49ab0a9dace7",
                            Descricao = "Usuário do sistema",
                            Name = "Usuario",
                            NormalizedName = "USUARIO"
                        },
                        new
                        {
                            Id = "b49118f1-89a9-4843-9b0f-7067f182d00b",
                            ConcurrencyStamp = "fd13a8dc-32ce-4577-b2fd-d69080e048c0",
                            Descricao = "Agente do sistema",
                            Name = "Agente",
                            NormalizedName = "USUARIO"
                        });
                });

            modelBuilder.Entity("Priori_OBJ.Models.tblAgentes", b =>
                {
                    b.Property<int>("id_agente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("cpf")
                        .HasColumnType("decimal(5,2");

                    b.Property<DateTime>("data_contratacao")
                        .HasColumnType("datetime2")
                        .HasMaxLength(15);

                    b.Property<DateTime>("data_demissao")
                        .HasColumnType("datetime2")
                        .HasMaxLength(15);

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(35)")
                        .HasMaxLength(35);

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal>("salario")
                        .HasColumnType("decimal(5,2");

                    b.Property<string>("telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.HasKey("id_agente");

                    b.ToTable("tblAgente");
                });

            modelBuilder.Entity("Priori_OBJ.Models.tblCarteiraInvestimentos", b =>
                {
                    b.Property<int>("id_carteira")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("data_efetuacao")
                        .HasColumnType("datetime2")
                        .HasMaxLength(50);

                    b.Property<DateTime>("duracao")
                        .HasColumnType("datetime2")
                        .HasMaxLength(15);

                    b.Property<string>("id_cliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("id_investimento")
                        .HasColumnType("int");

                    b.Property<decimal>("saldo")
                        .HasColumnType("decimal(5,2")
                        .HasMaxLength(15);

                    b.Property<int>("tempo_aplicacao")
                        .HasColumnType("int")
                        .HasMaxLength(35);

                    b.Property<decimal>("valor_aplicado")
                        .HasColumnType("decimal(5,2");

                    b.HasKey("id_carteira");

                    b.HasIndex("id_cliente");

                    b.ToTable("tblCarteiraInvestimento");
                });

            modelBuilder.Entity("Priori_OBJ.Models.tblClientes", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<decimal>("cpf")
                        .HasColumnType("decimal(5,2")
                        .HasMaxLength(15);

                    b.Property<DateTime>("data_adesao")
                        .HasColumnType("datetime2")
                        .HasMaxLength(15);

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(35)")
                        .HasMaxLength(35);

                    b.Property<int>("id_agente")
                        .HasColumnType("int");

                    b.Property<int>("id_tipoinvestidor")
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<int?>("tipoInvestidorid_tipoinvestidor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("id_agente");

                    b.HasIndex("tipoInvestidorid_tipoinvestidor");

                    b.ToTable("tblClientes");
                });

            modelBuilder.Entity("Priori_OBJ.Models.tblInvestimentos", b =>
                {
                    b.Property<int>("id_investimento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(35)")
                        .HasMaxLength(35);

                    b.Property<int>("id_carteira")
                        .HasColumnType("int");

                    b.Property<int>("id_tipoInvestidor")
                        .HasColumnType("int");

                    b.Property<int>("nome")
                        .HasColumnType("int")
                        .HasMaxLength(50);

                    b.Property<string>("rentabilidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<int>("tempo_minimo")
                        .HasColumnType("int")
                        .HasMaxLength(15);

                    b.Property<string>("tipo_investimento")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<decimal>("valor_minimo")
                        .HasColumnType("decimal(5,2")
                        .HasMaxLength(15);

                    b.HasKey("id_investimento");

                    b.HasIndex("id_carteira");

                    b.HasIndex("id_tipoInvestidor");

                    b.ToTable("tblInvestimento");
                });

            modelBuilder.Entity("Priori_OBJ.Models.tbltipoInvestidor", b =>
                {
                    b.Property<int>("id_tipoinvestidor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("descricao_categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("nome_categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("id_tipoinvestidor");

                    b.HasIndex("nome_categoria")
                        .IsUnique();

                    b.ToTable("tblTipoInvestidor");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Priori_OBJ.Models.Funcao", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Priori_OBJ.Models.tblClientes", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Priori_OBJ.Models.tblClientes", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Priori_OBJ.Models.Funcao", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Priori_OBJ.Models.tblClientes", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Priori_OBJ.Models.tblClientes", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Priori_OBJ.Models.tblCarteiraInvestimentos", b =>
                {
                    b.HasOne("Priori_OBJ.Models.tblClientes", "cliente")
                        .WithMany("CarteiraInvestimentos")
                        .HasForeignKey("id_cliente")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Priori_OBJ.Models.tblClientes", b =>
                {
                    b.HasOne("Priori_OBJ.Models.tblAgentes", "agente")
                        .WithMany("cliente")
                        .HasForeignKey("id_agente")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Priori_OBJ.Models.tbltipoInvestidor", "tipoInvestidor")
                        .WithMany()
                        .HasForeignKey("tipoInvestidorid_tipoinvestidor");
                });

            modelBuilder.Entity("Priori_OBJ.Models.tblInvestimentos", b =>
                {
                    b.HasOne("Priori_OBJ.Models.tblCarteiraInvestimentos", "carteira")
                        .WithMany("Investimentos")
                        .HasForeignKey("id_carteira")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Priori_OBJ.Models.tbltipoInvestidor", "tbltipoInvestidor")
                        .WithMany("investimento")
                        .HasForeignKey("id_tipoInvestidor")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
